spring.application.name=dppservice

# Kafka broker(s)
spring.kafka.bootstrap-servers=172.16.1.105:9092

# Producer settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer settings (optional, if you add consumers later)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Security protocol
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256

# JAAS config (important: all in one line, no line breaks!)
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";

# Truststore (for SSL)
spring.kafka.properties.ssl.truststore.location=/usr/local/kafka.truststore.jks
spring.kafka.properties.ssl.truststore.password=truststore-password
spring.kafka.properties.ssl.truststore.type=JKS

# Optional: enforce hostname verification
spring.kafka.properties.ssl.endpoint.identification.algorithm=https

# Spring-Kafka internals
#logging.level.org.springframework.kafka=DEBUG

# Apache Kafka client internals
#logging.level.org.apache.kafka=DEBUG

# (Optional) network-level logging for SSL/SASL handshake
#logging.level.sun.security.ssl=DEBUG
#logging.level.org.apache.kafka.common.network=DEBUG